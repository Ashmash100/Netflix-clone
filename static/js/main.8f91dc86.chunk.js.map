{"version":3,"sources":["axios.js","Row.jsx","request.js","Banner.jsx","Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchURL","isLargeRow","useState","movies","setMovies","trailerUrl","settrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","width","height","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","bannerdata","Math","floor","random","length","getData","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f91dc86.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\n\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchURL, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, settrailerUrl] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchURL);\r\n      setMovies(request.data.results);\r\n      //console.log(request.data.results);\r\n    }\r\n    fetchData();\r\n  }, [fetchURL]);\r\n\r\n  const opts = {\r\n      width: '100%',\r\n      height: '390',\r\n      playerVars: {\r\n          autoplay:1,\r\n      },\r\n  }\r\n\r\n  const handleClick = (movie) => {\r\n      if(trailerUrl) settrailerUrl('')\r\n      else movieTrailer(movie?.name || \"\")\r\n      .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          settrailerUrl(urlParams.get('v')) \r\n      }).catch((error) => console.log(error) )\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row_posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row_poster ${isLargeRow && 'row_posterLarge'}`}\r\n            src={`${base_url}${isLargeRow? movie.poster_path : movie.backdrop_path}`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = '96f17d42266cb9de3dfc3884b49c5d88';\r\n\r\nconst requests = {\r\n    fetchTrending : `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals : `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated : `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies : `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies : `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies : `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies : `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries : `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n\r\n}\r\n\r\nexport default requests;\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from './axios'\r\nimport request from './request'\r\nimport './banner.css'\r\n\r\nfunction Banner() {\r\n    \r\n    const[movie,setMovie] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function getData() { \r\n          const bannerdata = await axios.get(request.fetchNetflixOriginals)\r\n          setMovie(bannerdata.data.results[ Math.floor(Math.random() * bannerdata.data.results.length -1)])\r\n                  \r\n        } getData()\r\n    },[])\r\n\r\n    function truncate(str, n){\r\n        return (str.length > n) ? str.substr(0, n-1) + ' ...' : str;\r\n      };\r\n    console.log(movie)\r\n\r\n    return (\r\n       <header className='banner'\r\n       style={{\r\n           backgroundSize: 'cover',\r\n           backgroundImage: `url(\"http://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n           backgroundPosition: 'center center'\r\n\r\n       }}\r\n       >\r\n        <div className=\"banner_contents\">\r\n            <h1 className='banner_title'>\r\n                {movie?.title || movie?.name || movie?.original_name }\r\n            </h1>\r\n            <div className=\"banner_buttons\">\r\n                <button className=\"banner_button\">Play</button>\r\n                <button className=\"banner_button\">My List</button>\r\n            </div>\r\n            <h1 className=\"banner_description\">\r\n                {truncate(`${movie?.overview}`,150)}\r\n            </h1>\r\n        </div>\r\n        <div className=\"banner_fadebottom\"></div>\r\n       </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React,{useState,useEffect} from 'react'\r\nimport './nav.css'\r\n\r\nfunction Nav() {\r\n    \r\n    const[show,handleShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll',() => {\r\n            if(window.scrollY > 100) handleShow(true)\r\n            else handleShow(false)\r\n        })\r\n        return () => {\r\n            window.removeEventListener('scroll')\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className={`nav ${show && 'nav_black'}`}>\r\n            <img src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"Netflix Logo\" className=\"nav_logo\"/>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" alt=\"Avatar\" className=\"nav_avatar\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport Row from './Row'\nimport './App.css';\nimport request from './request'\nimport Banner from './Banner';\nimport Nav from './Nav'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title='Netflix Originals' fetchURL={request.fetchNetflixOriginals} isLargeRow />\n      <Row title='Trending Now' fetchURL={request.fetchTrending} />\n      <Row title='Top Rated' fetchURL={request.fetchTopRated} />\n      <Row title='Action Movies' fetchURL={request.fetchActionMovies} />\n      <Row title='Comedy Movies' fetchURL={request.fetchComedyMovies} />\n      <Row title='Horror Movies' fetchURL={request.fetchHorrorMovies} />\n      <Row title='Romance Movies' fetchURL={request.fetchRomanceMovies} />\n      <Row title='Documentaries' fetchURL={request.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}